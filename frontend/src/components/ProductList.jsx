// import { useState } from "react";

// const ProductList = ({ products }) => {
//   const [searchTerm, setSearchTerm] = useState("");
//   const [sortOrder, setSortOrder] = useState(""); // "asc" –∏–ª–∏ "desc"

//   // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
//   let filteredProducts = products.filter((product) =>
//     product.title.toLowerCase().includes(searchTerm.toLowerCase())
//   );

//   // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ü–µ–Ω–µ
//   if (sortOrder === "asc") {
//     filteredProducts.sort((a, b) => a.price - b.price);
//   } else if (sortOrder === "desc") {
//     filteredProducts.sort((a, b) => b.price - a.price);
//   }

//   return (
//     <div>
//       <h2>–¢–æ–≤–∞—Ä—ã</h2>

//       <input
//         type="text"
//         placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é"
//         value={searchTerm}
//         onChange={(e) => setSearchTerm(e.target.value)}
//       />

//       <select onChange={(e) => setSortOrder(e.target.value)}>
//         <option value="">–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ</option>
//         <option value="asc">–¶–µ–Ω–∞ ‚Üë</option>
//         <option value="desc">–¶–µ–Ω–∞ ‚Üì</option>
//       </select>

//       <div className="product-grid">
//         {filteredProducts.map((product) => (
//           <div key={product.id} className="product">
//             <h3>{product.title}</h3>
//             <p>–¶–µ–Ω–∞: {product.price} ‚ÇΩ</p>
//           </div>
//         ))}
//       </div>
//     </div>
//   );
// };

// export default ProductList;

import { useState } from "react";

const ProductList = ({ products, addToCart }) => {
  const [inputValue, setInputValue] = useState("");  // —Ç–µ–∫—Å—Ç –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
  const [searchTerm, setSearchTerm] = useState("");  // –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
  const [sortOrder, setSortOrder] = useState("");    // "asc" –∏–ª–∏ "desc"

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è
  let filteredProducts = products;

  if (searchTerm) {
    filteredProducts = filteredProducts.filter((product) =>
      product.title?.toLowerCase().includes(searchTerm.toLowerCase())
    );
  }

  // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ü–µ–Ω–µ
  if (sortOrder === "asc") {
    filteredProducts.sort((a, b) => a.price - b.price);
  } else if (sortOrder === "desc") {
    filteredProducts.sort((a, b) => b.price - a.price);
  }

  return (
    <div>
      <h2>–¢–æ–≤–∞—Ä—ã</h2>

      <input
        type="text"
        placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é"
        value={inputValue}
        onChange={(e) => setInputValue(e.target.value)}
      />

      <button onClick={() => setSearchTerm(inputValue)}>üîç –ü–æ–∏—Å–∫</button>

      <select onChange={(e) => setSortOrder(e.target.value)}>
        <option value="">–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ</option>
        <option value="asc">–¶–µ–Ω–∞ ‚Üë</option>
        <option value="desc">–¶–µ–Ω–∞ ‚Üì</option>
      </select>

      {/* –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã */}
      {searchTerm && (
        <div className="product-grid">
          {filteredProducts.length > 0 ? (
            filteredProducts.map((product) => (
              <div key={product._id} className="product">
                <h3>{product.title}</h3>
                <p>–¶–µ–Ω–∞: {product.price} $</p>
                {addToCart && (
                  <button onClick={() => addToCart(product)}>–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É</button>
                )}
              </div>
            ))
          ) : (
            <p>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.</p>
          )}
        </div>
      )}
    </div>
  );
};

export default ProductList;

