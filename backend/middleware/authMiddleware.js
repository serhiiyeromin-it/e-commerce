// const verifyAdmin = (req, res, next) => {
//   if (req.user.role !== "admin") {
//     return res.status(403).json({ message: "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω!" });
//   }
//   next();
// };
// module.exports = verifyAdmin;


const jwt = require("jsonwebtoken");

// üîê Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞ (–¥–ª—è –ª—é–±–æ–≥–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
const authMiddleware = (req, res, next) => {
  const authHeader = req.headers.authorization;
  console.log("–ó–∞–≥–æ–ª–æ–≤–∫–∏:", authHeader);

  if (!authHeader || !authHeader.startsWith("Bearer ")) {
    return res.status(401).json({ message: "–ù–µ—Ç —Ç–æ–∫–µ–Ω–∞!" });
  }

  const token = authHeader.split(" ")[1];

  try {
    // const decoded = jwt.verify(token, process.env.JWT_SECRET);
    const decoded = jwt.verify(token, "SECRET_KEY");

    console.log("–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω:", decoded);
    req.user = decoded; // decoded –¥–æ–ª–∂–µ–Ω –≤–∫–ª—é—á–∞—Ç—å userId, email, role –∏ —Ç.–¥.
    next();
  } catch (err) {
    return res.status(403).json({ message: "–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω!" });
  }
};

// üëÆ Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
const verifyAdmin = (req, res, next) => {
  if (!req.user || req.user.role !== "admin") {
    return res.status(403).json({ message: "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω!" });
  }
  next();
};

// üì§ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±–∞ middleware



module.exports = {
  authMiddleware,
  verifyAdmin,
};
